<?php

/**
 * @file
 * Photoswipe theme functions.
 */

/**
 * Returns HTML for an Photoswipe image field formatter.
 *
 * @param $variables
 *   An associative array containing:
 *   - item: An array of image data.
 *   - image_style: An optional image style.
 *   - path: An array containing the link 'path' and link 'options'.
 *
 * @ingroup themeable
 */
function theme_photoswipe_image_formatter($variables) {
  $item = $variables['item'];
  $node = $variables['node'];
  $field = $variables['field'];
  $settings = $variables['display_settings'];

  $image = array(
    'path' => $item['uri'],
    'alt' => $item['alt'],
    'title' => $item['title'],
    'style_name' => $settings['photoswipe_node_style'],
  );

  if (isset($item['width']) && isset($item['height'])) {
    $image['width'] = $item['width'];
    $image['height'] = $item['height'];
  }

  if ($style_name = $settings['photoswipe_image_style']) {
    $path = image_style_url($style_name, $image['path']);
  }
  else {
    $path = file_create_url($image['path']);
  }

  return theme('photoswipe_imagefield', array('image' => $image, 'path' => $path));
}


/**
 * Returns HTML for an image using a specific Photoswipe image style.
 *
 * @param $variables
 *   An associative array containing:
 *   - image: image item as array.
 *   - path: The path of the image that should be displayed in the Photoswipe.
 *
 * @ingroup themeable
 */
function theme_photoswipe_imagefield($variables) {
  $class = array('photoswipe');

  if (!empty($variables['image']['style_name'])) {
    $image = theme('image_style', $variables['image']);
  }
  else {
    $image = theme('image', $variables['image']);
  }

  $options = array(
    'html' => TRUE,
    'attributes' => array(
      'class' => implode(' ', $class),
    )
  );

  return l($image, $variables['path'], $options);
}
